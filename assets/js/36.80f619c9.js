(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{401:function(v,_,l){"use strict";l.r(_);var i=l(7),t=Object(i.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"jvm-体系结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#jvm-体系结构"}},[v._v("#")]),v._v(" JVM-体系结构")]),v._v(" "),_("h2",{attrs:{id:"体系结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#体系结构"}},[v._v("#")]),v._v(" 体系结构")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/qouson/my-pic-bed/pic/20210313120914.png",alt:"20210313120914"}}),v._v(" "),_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/qouson/my-pic-bed/pic/20210328210906.png",alt:"20210328210906"}})]),v._v(" "),_("ul",[_("li",[v._v("java8将Permanent Generation移除，改为Metaspace")]),v._v(" "),_("li",[v._v("Java栈改为虚拟机栈")]),v._v(" "),_("li",[v._v("方法区和堆是线程共享区域，所有线程共享这一块内存数据，随虚拟机或GC而创建和销毁\n"),_("ul",[_("li",[v._v("方法区:\n"),_("ul",[_("li",[v._v("JVM用来存储加载的类信息，常量，静态变量，编译后的代码等数据。\n"),_("ul",[_("li",[v._v("类信息")]),v._v(" "),_("li",[v._v("运行时常量池")]),v._v(" "),_("li",[v._v("字符串常量")])])]),v._v(" "),_("li",[v._v("虚拟机规范中这是一个逻辑区域。具体实现根据不同虚拟机来实现。")]),v._v(" "),_("li",[v._v("如：oracle的HotSpot在java7中方法区在永久代，java8在元数据空间，并且通过GC机制对这个区域进行管理。")])])]),v._v(" "),_("li",[v._v("堆：\n"),_("ul",[_("li",[v._v("新生代 New\n"),_("ul",[_("li",[v._v("Eden")]),v._v(" "),_("li",[v._v("From Survior/Survior0(S0)")]),v._v(" "),_("li",[v._v("To Survior/Survior1(S1)")])])]),v._v(" "),_("li",[v._v("老年代 Old")])])])])]),v._v(" "),_("li",[v._v("虚拟机栈，本地方法栈，程序计数器是线程独占区域，随线程生命周期而创建和销毁\n"),_("ul",[_("li",[v._v("虚拟机栈\n"),_("ul",[_("li",[v._v("每个线程都有这个私有空间。")]),v._v(" "),_("li",[v._v("线程栈由多个栈帧（Stack Frame）组成。")]),v._v(" "),_("li",[v._v("一个线程会执行一个或多个方法，一个方法对应一个栈帧。")]),v._v(" "),_("li",[v._v("栈帧内容包含：\n"),_("ul",[_("li",[v._v("局部变量表")]),v._v(" "),_("li",[v._v("操作数栈")]),v._v(" "),_("li",[v._v("动态链接")]),v._v(" "),_("li",[v._v("方法返回地址")]),v._v(" "),_("li",[v._v("附加信息")]),v._v(" "),_("li",[v._v("...")])])]),v._v(" "),_("li",[_("strong",[v._v("栈内存默认最大是1M，超出则抛出StackOverflowError")])])])]),v._v(" "),_("li",[v._v("本地方法栈\n"),_("ul",[_("li",[v._v("和虚拟机栈功能类似，虚拟机栈时为虚拟机执行Java方法准备，本地方法栈是为虚拟机使用Native本地方法而准备的。")]),v._v(" "),_("li",[v._v("虚拟机规范没有规定具体的实现，由不同的厂商实现。")]),v._v(" "),_("li",[_("strong",[v._v("HotSpot虚拟机中虚拟机栈和本地方法栈的实现方式一样，同样超出大小以后会抛出StackOverflowError")])])])]),v._v(" "),_("li",[v._v("程序计数器\n"),_("ul",[_("li",[v._v("记录当前线程执行字节码的位置，存储的是字节码指令地址，如果执行Native方法，则计数器为空。")]),v._v(" "),_("li",[v._v("每个线程都在这个空间有一个私有空间，占用内存空间少。")]),v._v(" "),_("li",[v._v("CPU同一时间，只会执行一条线程中的指令。JVM多线程会轮流切换并分配CPU执行时间的方式。为了线程切换后，需要通过程序计数器，来恢复正确的执行位置。")])])])])])]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"运行数据区"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#运行数据区"}},[v._v("#")]),v._v(" 运行数据区")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/qouson/my-pic-bed/pic/20210412110307.png",alt:"20210412110307"}})]),v._v(" "),_("ul",[_("li",[v._v("JVM用来存储加载的类信息、常量、静态变量、编译后的代码等数据")]),v._v(" "),_("li",[v._v("虚拟机中这是一个逻辑划分。具体实现根据不同虚拟机来实现。如oracle的HotSpot在Java7中方法区放在永久代，Java8放在元数据空间，并且通过GC机制对这个区域进行管理。")])])])}),[],!1,null,null,null);_.default=t.exports}}]);